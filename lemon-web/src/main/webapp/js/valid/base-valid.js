;
var REGEX_TEL = /^(([0]\d{2,3}[\-\s*])|([0]\d{2,3}))(\d{7,8})*/;
var REGEX_PHONE = /^((13[0-9])|(14[0-9])|(15[^4,\D])|(18[0-9])|(17[0-9]))+(\d{8})*/;
var REGEX_DATE =/^((([0-9]{3}[1-9]|[0-9]{2}[1-9][0-9]{1}|[0-9]{1}[1-9][0-9]{2}|[1-9][0-9]{3})(\s*|[-\/])(((0[13578]|1[02])(\s*|[-\/])(0[1-9]|[12][0-9]|3[01]))|((0[469]|11)(\s*|[-\/])(0[1-9]|[12][0-9]|30))|(02(\s*|[-\/])(0[1-9]|[1][0-9]|2[0-8]))))|((([0-9]{2})(0[48]|[2468][048]|[13579][26])|((0[48]|[2468][048]|[3579][26])00))(\s*|[-\/])02(\s*|[-\/])29))*/;
var REGEX_TIME = /^([0-1]?[0-9]|2[0-3])(\s*|[-\/]|[:])([0-5][0-9])(\s*|[-\/]|[:])([0-5][0-9])*/;
var REGEX_SIMPLE_TIME = /^([0-1]?[0-9]|2[0-3]):([0-5][0-9]):([0-5][0-9])*/;
var REGEX_DATETIME =/^((([0-9]{3}[1-9]|[0-9]{2}[1-9][0-9]{1}|[0-9]{1}[1-9][0-9]{2}|[1-9][0-9]{3})(\s*|[-\/])(((0[13578]|1[02])(\s*|[-\/])(0[1-9]|[12][0-9]|3[01]))|((0[469]|11)(\s*|[-\/])(0[1-9]|[12][0-9]|30))|(02(\s*|[-\/])(0[1-9]|[1][0-9]|2[0-8]))))|((([0-9]{2})(0[48]|[2468][048]|[13579][26])|((0[48]|[2468][048]|[3579][26])00))(\s*|[-\/])02(\s*|[-\/])29))(\s*|[-\/]|[:])([0-1]?[0-9]|2[0-3])(\s*|[-\/]|[:])([0-5][0-9])(\s*|[-\/]|[:])([0-5][0-9])*/;
var REGEX_EMAIL_ALL = /\w+([-+.]\w+)*@\w+([-.]\w+)*\.\w+([-.]\w+)*/;
var REGEX_TEL_PHONE = /^(((([0]\d{2,3}[\-\s*])|([0]\d{2,3}))(\d{7,8}))|(((13[0-9])|(14[0-9])|(15[^4,\D])|(18[0-9])|(17[0-9]))+(\d{8})))*/;
var REGEX_INT_SIMPLE = /^\d+$/;
var REGEX_INT_ALL = /^(-)?[1-9][0-9]*/;
var REGEX_QQ =  /^[1-9][0-9]{4,14}$/;
var REGEX_INT_1_100 = /^([1-9]\d?|100)$/;
var REGEX_FLOAT_0_1 = /^(([0]+\.+\d+)|([1]+\.+[0]+))*/;
var REGEX_MONEY = /^([1-9][\d]{0,7}|0)(\.[\d]{1,2})?/;
var REGEX_DOUBLE_ALL = /^(-)?(\d+\.+\d+)*/;
var REGEX_INT_DOUBLE = /^((\d+\.+\d+)||(\d+))*/;
var REGEX_WEB_SITE = /^https?:\/\/(([a-zA-Z0-9_-])+(\.)?)*(:\d+)?(\/((\.)?(\?)?=?&?[a-zA-Z0-9_-](\?)?)*)*/i;
var REGEX_DECIMAL = /^\d{0,10}.\d{0,2}$/;
var REGEX_IDENTITY = /^(^[1-9]\d{7}((0\d)|(1[0-2]))(([0|1|2]\d)|3[0-1])\d{3}$)|(^[1-9]\d{5}[1-9]\d{3}((0\d)|(1[0-2]))(([0|1|2]\d)|3[0-1])((\d{4})|\d{3}[Xx])$)$/;

/**
 * <h4>JS 正则验证</h4>
 * @param str 要验证字符串
 * @param reg 正则规则
 * @returns {boolean} true为验证不通过
 */
function regexp(str,reg) {
    return !reg.test(str);
}

/**
 * <h4>验证字符串长度, 要先判断空</h4>
 * @param str 要验证的字符串
 * @param len 要验证的最大长度
 * @returns {boolean} true为验证不通过
 */
function validLength(str,len) {
    return str.length > len;
}

/**
 * <h4>验证字符串是否为空</h4>
 * @param str 要验证字符串
 * @returns {boolean}  true为验证不通过
 */
function validNotBlank(str) {
    if (undefined == str || null == str ||
            "" == str){
        return true;
    }
    return false;
}
/**
 * <h4>验证字符串是否为空</h4>
 * @param str 要验证字符串
 * @returns {boolean}  true为验证不通过
 */
function validNull(str) {
    if (undefined == str || null == str){
        return true;
    }
    return false;
}








